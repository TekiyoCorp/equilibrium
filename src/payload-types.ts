/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  hero?:
    | (
        | {
            heading: string;
            subheading?: string | null;
            link?:
              | {
                  label: string;
                  linkType?: ('url' | 'page') | null;
                  href?: string | null;
                  page?: (number | null) | Page;
                  variant?: ('primary' | 'secondary' | 'ghost') | null;
                  target?: ('_self' | '_blank') | null;
                  fullWidth?: boolean | null;
                  ariaLabel?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'link';
                }[]
              | null;
            backgroundImage?: (number | null) | Media;
            background?: ('light' | 'dark') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'centerHero';
          }
        | {
            heading: string;
            subheading?: string | null;
            image?: (number | null) | Media;
            link?:
              | {
                  label: string;
                  linkType?: ('url' | 'page') | null;
                  href?: string | null;
                  page?: (number | null) | Page;
                  variant?: ('primary' | 'secondary' | 'ghost') | null;
                  target?: ('_self' | '_blank') | null;
                  fullWidth?: boolean | null;
                  ariaLabel?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'link';
                }[]
              | null;
            backgroundImage?: (number | null) | Media;
            background?: ('light' | 'dark') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'rightHero';
          }
        | {
            heading: string;
            subheading?: string | null;
            email?: string | null;
            phone?: string | null;
            link?:
              | {
                  label: string;
                  linkType?: ('url' | 'page') | null;
                  href?: string | null;
                  page?: (number | null) | Page;
                  variant?: ('primary' | 'secondary' | 'ghost') | null;
                  target?: ('_self' | '_blank') | null;
                  fullWidth?: boolean | null;
                  ariaLabel?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'link';
                }[]
              | null;
            backgroundImage?: (number | null) | Media;
            background?: ('light' | 'dark') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contactHero';
          }
      )[]
    | null;
  sections?:
    | (
        | {
            items: {
              image: number | Media;
              text?: string | null;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaCardSlider';
          }
        | {
            title?: string | null;
            items: {
              image: number | Media;
              eyebrow?: string | null;
              heading?: string | null;
              id?: string | null;
            }[];
            button?:
              | {
                  label: string;
                  linkType?: ('url' | 'page') | null;
                  href?: string | null;
                  page?: (number | null) | Page;
                  variant?: ('primary' | 'secondary' | 'ghost') | null;
                  target?: ('_self' | '_blank') | null;
                  fullWidth?: boolean | null;
                  ariaLabel?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'courseCards';
          }
        | {
            overlayWord?: string | null;
            backgroundImage: number | Media;
            heading?: string | null;
            button?:
              | {
                  label: string;
                  linkType?: ('url' | 'page') | null;
                  href?: string | null;
                  page?: (number | null) | Page;
                  variant?: ('primary' | 'secondary' | 'ghost') | null;
                  target?: ('_self' | '_blank') | null;
                  fullWidth?: boolean | null;
                  ariaLabel?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }[]
              | null;
            items?:
              | {
                  title: string;
                  description?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'overlayFeatureSection';
          }
        | {
            items: {
              lead?: string | null;
              body?: string | null;
              image: number | Media;
              imagePlacement?: ('top' | 'bottom') | null;
              imageAlign?: ('left' | 'center' | 'right') | null;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'textMediaTiles';
          }
        | {
            title?: string | null;
            subtitle?: string | null;
            backgroundImage?: (number | null) | Media;
            button?:
              | {
                  label: string;
                  linkType?: ('url' | 'page') | null;
                  href?: string | null;
                  page?: (number | null) | Page;
                  variant?: ('primary' | 'secondary' | 'ghost') | null;
                  target?: ('_self' | '_blank') | null;
                  fullWidth?: boolean | null;
                  ariaLabel?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'conceptSection';
          }
        | {
            title?: string | null;
            items?:
              | {
                  question: string;
                  answer: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'faqSection';
          }
        | {
            label: string;
            linkType?: ('url' | 'page') | null;
            href?: string | null;
            page?: (number | null) | Page;
            variant?: ('primary' | 'secondary' | 'ghost') | null;
            target?: ('_self' | '_blank') | null;
            fullWidth?: boolean | null;
            ariaLabel?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'button';
          }
      )[]
    | null;
  title: string;
  slug: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        centerHero?:
          | T
          | {
              heading?: T;
              subheading?: T;
              link?:
                | T
                | {
                    link?:
                      | T
                      | {
                          label?: T;
                          linkType?: T;
                          href?: T;
                          page?: T;
                          variant?: T;
                          target?: T;
                          fullWidth?: T;
                          ariaLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              backgroundImage?: T;
              background?: T;
              id?: T;
              blockName?: T;
            };
        rightHero?:
          | T
          | {
              heading?: T;
              subheading?: T;
              image?: T;
              link?:
                | T
                | {
                    link?:
                      | T
                      | {
                          label?: T;
                          linkType?: T;
                          href?: T;
                          page?: T;
                          variant?: T;
                          target?: T;
                          fullWidth?: T;
                          ariaLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              backgroundImage?: T;
              background?: T;
              id?: T;
              blockName?: T;
            };
        contactHero?:
          | T
          | {
              heading?: T;
              subheading?: T;
              email?: T;
              phone?: T;
              link?:
                | T
                | {
                    link?:
                      | T
                      | {
                          label?: T;
                          linkType?: T;
                          href?: T;
                          page?: T;
                          variant?: T;
                          target?: T;
                          fullWidth?: T;
                          ariaLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              backgroundImage?: T;
              background?: T;
              id?: T;
              blockName?: T;
            };
      };
  sections?:
    | T
    | {
        mediaCardSlider?:
          | T
          | {
              items?:
                | T
                | {
                    image?: T;
                    text?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        courseCards?:
          | T
          | {
              title?: T;
              items?:
                | T
                | {
                    image?: T;
                    eyebrow?: T;
                    heading?: T;
                    id?: T;
                  };
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          linkType?: T;
                          href?: T;
                          page?: T;
                          variant?: T;
                          target?: T;
                          fullWidth?: T;
                          ariaLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        overlayFeatureSection?:
          | T
          | {
              overlayWord?: T;
              backgroundImage?: T;
              heading?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          linkType?: T;
                          href?: T;
                          page?: T;
                          variant?: T;
                          target?: T;
                          fullWidth?: T;
                          ariaLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        textMediaTiles?:
          | T
          | {
              items?:
                | T
                | {
                    lead?: T;
                    body?: T;
                    image?: T;
                    imagePlacement?: T;
                    imageAlign?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        conceptSection?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          linkType?: T;
                          href?: T;
                          page?: T;
                          variant?: T;
                          target?: T;
                          fullWidth?: T;
                          ariaLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        faqSection?:
          | T
          | {
              title?: T;
              items?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        button?:
          | T
          | {
              label?: T;
              linkType?: T;
              href?: T;
              page?: T;
              variant?: T;
              target?: T;
              fullWidth?: T;
              ariaLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  title?: T;
  slug?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo?: {
    image?: (number | null) | Media;
    alt?: string | null;
  };
  nav?:
    | {
        label: string;
        linkType?: ('url' | 'page') | null;
        href?: string | null;
        page?: (number | null) | Page;
        variant?: ('primary' | 'secondary' | 'ghost') | null;
        target?: ('_self' | '_blank') | null;
        fullWidth?: boolean | null;
        ariaLabel?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'link';
      }[]
    | null;
  cta?:
    | {
        label: string;
        linkType?: ('url' | 'page') | null;
        href?: string | null;
        page?: (number | null) | Page;
        variant?: ('primary' | 'secondary' | 'ghost') | null;
        target?: ('_self' | '_blank') | null;
        fullWidth?: boolean | null;
        ariaLabel?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'link';
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  columns?:
    | {
        title: string;
        items?:
          | {
              type: 'text' | 'link';
              text?: string | null;
              link?: {
                label?: string | null;
                href?: string | null;
                newTab?: boolean | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  logo?: {
    /**
     * Upload a logo image
     */
    image?: (number | null) | Media;
  };
  legal?: {
    copyright?: string | null;
    byline?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?:
    | T
    | {
        image?: T;
        alt?: T;
      };
  nav?:
    | T
    | {
        link?:
          | T
          | {
              label?: T;
              linkType?: T;
              href?: T;
              page?: T;
              variant?: T;
              target?: T;
              fullWidth?: T;
              ariaLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  cta?:
    | T
    | {
        link?:
          | T
          | {
              label?: T;
              linkType?: T;
              href?: T;
              page?: T;
              variant?: T;
              target?: T;
              fullWidth?: T;
              ariaLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              type?: T;
              text?: T;
              link?:
                | T
                | {
                    label?: T;
                    href?: T;
                    newTab?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  logo?:
    | T
    | {
        image?: T;
      };
  legal?:
    | T
    | {
        copyright?: T;
        byline?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}